# Generated by Django 3.2 on 2022-04-11 03:22

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'invalid': 'Enter a valid email address.', 'null': 'Email field is required.', 'unique': 'AN account with that email already exists. Please login to continue.'}, max_length=64, unique=True, verbose_name='Email')),
                ('username', models.CharField(error_messages={'invalid': 'Enter a valid email address.', 'null': 'Username field is required.', 'unique': 'An account with that username already exists.'}, max_length=64, unique=True, verbose_name='Username')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Full Name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff Status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('is_email_verified', models.BooleanField(default=False, help_text='Designates whether this user is verified or not.', verbose_name='Email Verification Status')),
                ('hide_email', models.BooleanField(default=False, help_text='Designates whether this user wants to show or hide their email ID.', verbose_name='Hide Email')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('display_pic', models.ImageField(blank=True, default=account.models.get_default_display_pic, null=True, upload_to=account.models.get_user_display_pic, verbose_name='Profile Picture')),
                ('text', models.TextField(blank=True, max_length=32, null=True, verbose_name='Text')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField(default=account.models.getOTPToken, editable=False, verbose_name='Token')),
                ('expiry_time', models.DateTimeField(default=account.models.getExpiryTime, editable=False, verbose_name='Expiry Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
